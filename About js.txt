variables 
variables are containers for storing data values.
we can create variable using let,var & const keywords

var  key word is functional code (soft assert )

console.log(x); ....op will be 
var s=5;
console.log(s);

out put
Undefined
5

++++++++

let keyword is block scoped (hard aseert)
console.log(x); .... 
var s=5;
console.log(s);

out put
error

***********
const keyword used for lock the value of the variable we cant modified futher

const x = 101;
console.log(x);
x=500;
console.log(x);


****
var x  = 10; .. automatically gusses the data type

var x= 10,y = "kjh";

let x ="ad"; ... 

**
document.write (x); ... print out statement on html document
console.log(x); ... print out statemenet on console window in Html doc

******
***********************Date type in js ****
primitive

Number
String
Boolean
Null
Undefiend
------------------------------
non- Primitive

Object
Array
Function
Date
Regx
------------------------------
ex :-
var name = "John";
console.log(typeof(name)); .....show the data type

let status = null;
console.log(typeof(status));  ....data type consider as object


let value ;
console.log(typeof(value)); ....data type undefiend (don't assing value to variable)

**************************operator***************

Operator	Description

+		Addition
-		Subtraction
*		Multiplication
**		Exponentiation (ES2016)
/		Division
%		Modulus (Division Remainder)
++		Increment
--		Decrement

************************ JavaScript Assignment Operators ********************
Operator	Example		Same As

=		x = y		x = y
+=		x += y		x = x + y
-=		x -= y		x = x - y
*=		x *= y		x = x * y
/=		x /= y		x = x / y
%=		x %= y		x = x % y
**=		x **= y		x = x ** y

********************************JavaScript Comparison Operators****************************

Operator	Description

==		equal to
===		equal value and equal type
!=		not equal
!==		not equal value or not equal type
>		greater than
<		less than
>=		greater than or equal to
<=		less than or equal to
?		ternary operator

*********************************JavaScript Logical Operators ****************************

Operator	Description

&&		logical and
||		logical or
!		logical not

*****************************************JavaScript Type Operators******************
Operator	Description

typeof		Returns the type of a variable
instanceof	Returns true if an object is an instance of an object type

*********************JavaScript Bitwise Operators*************************

























